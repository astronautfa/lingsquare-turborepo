import{e as L,f as A,g as h,h as k,j as b,k as x}from"./vidstack-CWCKIDIL.js";import"./vidstack-P4J5332Z.js";import{a as o}from"./vidstack-ZOZXRZOW.js";import{a as R}from"./vidstack-BCURYQHW.js";import"./vidstack-ISJILNRC.js";import{a as v}from"./vidstack-D22ZK42Y.js";import{B as T,a as c,b as y,da as f,f as E,g as C,u as S,v as u}from"./vidstack-YVHLWECJ.js";import"./vidstack-YPI2SM2S.js";var d=class{#e;constructor(e){this.#e=new chrome.cast.media.MediaInfo(e.src,e.type)}build(){return this.#e}setStreamType(e){return e.includes("live")?this.#e.streamType=chrome.cast.media.StreamType.LIVE:this.#e.streamType=chrome.cast.media.StreamType.BUFFERED,this}setTracks(e){return this.#e.tracks=e.map(this.#t),this}setMetadata(e,t){return this.#e.metadata=new chrome.cast.media.GenericMediaMetadata,this.#e.metadata.title=e,this.#e.metadata.images=[{url:t}],this}#t(e,t){let s=new chrome.cast.media.Track(t,chrome.cast.media.TrackType.TEXT);return s.name=e.label,s.trackContentId=e.src,s.trackContentType="text/vtt",s.language=e.language,s.subtype=e.kind.toUpperCase(),s}};var p=chrome.cast.media.TrackType.TEXT,w=chrome.cast.media.TrackType.AUDIO,m=class{#e;#t;#a;constructor(e,t,s){this.#e=e,this.#t=t,this.#a=s}setup(){let e=this.syncRemoteActiveIds.bind(this);T(this.#t.audioTracks,"change",e),T(this.#t.textTracks,"mode-change",e),S(this.#n.bind(this))}getLocalTextTracks(){return this.#t.$state.textTracks().filter(e=>e.src&&e.type==="vtt")}#r(){return this.#t.$state.audioTracks()}#i(e){let t=this.#e.mediaInfo?.tracks??[];return e?t.filter(s=>s.type===e):t}#m(){let e=[],t=this.#r().find(a=>a.selected),s=this.getLocalTextTracks().filter(a=>a.mode==="showing");if(t){let a=this.#i(w),i=this.#d(a,t);i&&e.push(i.trackId)}if(s?.length){let a=this.#i(p);if(a.length)for(let i of s){let r=this.#d(a,i);r&&e.push(r.trackId)}}return e}#n(){let e=this.getLocalTextTracks();if(!this.#e.isMediaLoaded)return;let t=this.#i(p);for(let s of e)if(!this.#d(t,s)){y(()=>this.#a?.());break}}syncRemoteTracks(e){if(!this.#e.isMediaLoaded)return;let t=this.#r(),s=this.getLocalTextTracks(),a=this.#i(w),i=this.#i(p);for(let r of a){if(this.#h(t,r))continue;let n={id:r.trackId.toString(),label:r.name,language:r.language,kind:r.subtype??"main",selected:!1};this.#t.audioTracks[v.add](n,e)}for(let r of i){if(this.#h(s,r))continue;let n={id:r.trackId.toString(),src:r.trackContentId,label:r.name,language:r.language,kind:r.subtype.toLowerCase()};this.#t.textTracks.add(n,e)}}syncRemoteActiveIds(e){if(!this.#e.isMediaLoaded)return;let t=this.#m(),s=new chrome.cast.media.EditTracksInfoRequest(t);this.#c(s).catch(a=>{})}#c(e){let t=h();return new Promise((s,a)=>t?.editTracksInfo(e,s,a))}#h(e,t){return e.find(s=>this.#s(s,t))}#d(e,t){return e.find(s=>this.#s(t,s))}#s(e,t){return t.name===e.label&&t.language===e.language&&t.subtype.toLowerCase()===e.kind.toLowerCase()}};var M=class{$$PROVIDER_TYPE="GOOGLE_CAST";scope=C();#e;#t;#a;#r=null;#i="disconnected";#m=0;#n=0;#c=new o(0,0);#h=new R(this.#b.bind(this));#d;#s=null;#l=!1;constructor(e,t){this.#e=e,this.#t=t,this.#a=new m(e,t,this.#G.bind(this))}get type(){return"google-cast"}get currentSrc(){return this.#r}get player(){return this.#e}get cast(){return L()}get session(){return A()}get media(){return h()}get hasActiveSession(){return k(this.#r)}setup(){this.#v(),this.#R(),this.#a.setup(),this.#t.notify("provider-setup",this)}#v(){x(cast.framework.CastContextEventType.CAST_STATE_CHANGED,this.#f.bind(this))}#R(){let e=cast.framework.RemotePlayerEventType,t={[e.IS_CONNECTED_CHANGED]:this.#f,[e.IS_MEDIA_LOADED_CHANGED]:this.#k,[e.CAN_CONTROL_VOLUME_CHANGED]:this.#p,[e.CAN_SEEK_CHANGED]:this.#g,[e.DURATION_CHANGED]:this.#P,[e.IS_MUTED_CHANGED]:this.#y,[e.VOLUME_LEVEL_CHANGED]:this.#y,[e.IS_PAUSED_CHANGED]:this.#I,[e.LIVE_SEEKABLE_RANGE_CHANGED]:this.#E,[e.PLAYER_STATE_CHANGED]:this.#_};this.#d=t;let s=this.#x.bind(this);for(let a of f(t))this.#e.controller.addEventListener(a,s);E(()=>{for(let a of f(t))this.#e.controller.removeEventListener(a,s)})}async play(){if(!(!this.#e.isPaused&&!this.#l)){if(this.#l){await this.#S(!1,0);return}this.#e.controller?.playOrPause()}}async pause(){this.#e.isPaused||this.#e.controller?.playOrPause()}getMediaStatus(e){return new Promise((t,s)=>{this.media?.getStatus(e,t,s)})}setMuted(e){(e&&!this.#e.isMuted||!e&&this.#e.isMuted)&&this.#e.controller?.muteOrUnmute()}setCurrentTime(e){this.#e.currentTime=e,this.#t.notify("seeking",e),this.#e.controller?.seek()}setVolume(e){this.#e.volumeLevel=e,this.#e.controller?.setVolumeLevel()}async loadSource(e){if(this.#s?.src!==e&&(this.#s=null),k(e)){this.#L(),this.#r=e;return}this.#t.notify("load-start");let t=this.#N(e),s=await this.session.loadMedia(t);if(s){this.#r=null,this.#t.notify("error",Error(b(s)));return}this.#r=e}destroy(){this.#u(),this.#T()}#u(){this.#s||(this.#n=0,this.#c=new o(0,0)),this.#h.stop(),this.#m=0,this.#s=null}#L(){let e=new u("resume-session",{detail:this.session});this.#k(e);let{muted:t,volume:s,savedState:a}=this.#t.$state,i=a();this.setCurrentTime(Math.max(this.#e.currentTime,i?.currentTime??0)),this.setMuted(t()),this.setVolume(s()),i?.paused===!1&&this.play()}#T(){this.cast.endCurrentSession(!0);let{remotePlaybackLoader:e}=this.#t.$state;e.set(null)}#A(){let{savedState:e}=this.#t.$state;e.set({paused:this.#e.isPaused,currentTime:this.#e.currentTime}),this.#T()}#b(){this.#M()}#x(e){this.#d[e.type].call(this,e)}#f(e){let t=this.cast.getCastState(),s=t===cast.framework.CastState.CONNECTED?"connected":t===cast.framework.CastState.CONNECTING?"connecting":"disconnected";if(this.#i===s)return;let a={type:"google-cast",state:s},i=this.#o(e);this.#i=s,this.#t.notify("remote-playback-change",a,i),s==="disconnected"&&this.#A()}#k(e){if(!!!this.#e.isMediaLoaded)return;let s=c(this.#t.$state.source);Promise.resolve().then(()=>{if(s!==c(this.#t.$state.source)||!this.#e.isMediaLoaded)return;this.#u();let a=this.#e.duration;this.#c=new o(0,a);let i={provider:this,duration:a,buffered:new o(0,0),seekable:this.#C()},r=this.#o(e);this.#t.notify("loaded-metadata",void 0,r),this.#t.notify("loaded-data",void 0,r),this.#t.notify("can-play",i,r),this.#p(),this.#g(e);let{volume:l,muted:n}=this.#t.$state;this.setVolume(l()),this.setMuted(n()),this.#h.start(),this.#a.syncRemoteTracks(r),this.#a.syncRemoteActiveIds(r)})}#p(){this.#t.$state.canSetVolume.set(this.#e.canControlVolume)}#g(e){let t=this.#o(e);this.#t.notify("stream-type-change",this.#w(),t)}#w(){return this.#e.mediaInfo?.streamType===chrome.cast.media.StreamType.LIVE?this.#e.canSeek?"live:dvr":"live":"on-demand"}#M(){if(this.#s)return;let e=this.#e.currentTime;e!==this.#m&&(this.#t.notify("time-change",e),e>this.#n&&(this.#n=e,this.#E()),this.#t.$state.seeking()&&this.#t.notify("seeked",e),this.#m=e)}#P(e){if(!this.#e.isMediaLoaded||this.#s)return;let t=this.#e.duration,s=this.#o(e);this.#c=new o(0,t),this.#t.notify("duration-change",t,s)}#y(e){if(!this.#e.isMediaLoaded)return;let t={muted:this.#e.isMuted,volume:this.#e.volumeLevel},s=this.#o(e);this.#t.notify("volume-change",t,s)}#I(e){let t=this.#o(e);this.#e.isPaused?this.#t.notify("pause",void 0,t):this.#t.notify("play",void 0,t)}#E(e){let t={seekable:this.#C(),buffered:new o(0,this.#n)},s=e?this.#o(e):void 0;this.#t.notify("progress",t,s)}#_(e){let t=this.#e.playerState,s=chrome.cast.media.PlayerState;if(this.#l=t===s.IDLE,t===s.PAUSED)return;let a=this.#o(e);switch(t){case s.PLAYING:this.#t.notify("playing",void 0,a);break;case s.BUFFERING:this.#t.notify("waiting",void 0,a);break;case s.IDLE:this.#h.stop(),this.#t.notify("pause"),this.#t.notify("end");break}}#C(){return this.#e.liveSeekableRange?new o(this.#e.liveSeekableRange.start,this.#e.liveSeekableRange.end):this.#c}#o(e){return e instanceof Event?e:new u(e.type,{detail:e})}#D(e){let{streamType:t,title:s,poster:a}=this.#t.$state;return new d(e).setMetadata(s(),a()).setStreamType(t()).setTracks(this.#a.getLocalTextTracks()).build()}#N(e){let t=this.#D(e),s=new chrome.cast.media.LoadRequest(t),a=this.#t.$state.savedState();return s.autoplay=(this.#s?.paused??a?.paused)===!1,s.currentTime=this.#s?.time??a?.currentTime??0,s}async#S(e,t){let s=c(this.#t.$state.source);this.#s={src:s,paused:e,time:t},await this.loadSource(s)}#G(){this.#S(this.#e.isPaused,this.#e.currentTime).catch(e=>{})}};export{M as GoogleCastProvider};
