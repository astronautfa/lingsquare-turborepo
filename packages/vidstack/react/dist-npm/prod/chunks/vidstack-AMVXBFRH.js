import{e as L,f as A,g as h,h as k,j as b,k as x}from"./vidstack-57AWZY4T.js";import{a as R}from"./vidstack-AFFJFYZH.js";import"./vidstack-U3MKAWKX.js";import"./vidstack-YHRZY7KJ.js";import{a as v}from"./vidstack-X63HW5FO.js";import{a as o}from"./vidstack-XKIWRSNW.js";import{B as T,a as c,b as y,f as E,fa as f,g as C,u as S,v as u}from"./vidstack-YO4XO2QW.js";import"./vidstack-IGJ6WVY6.js";var d=class{#t;constructor(t){this.#t=new chrome.cast.media.MediaInfo(t.src,t.type)}build(){return this.#t}setStreamType(t){return t.includes("live")?this.#t.streamType=chrome.cast.media.StreamType.LIVE:this.#t.streamType=chrome.cast.media.StreamType.BUFFERED,this}setTracks(t){return this.#t.tracks=t.map(this.#e),this}setMetadata(t,e){return this.#t.metadata=new chrome.cast.media.GenericMediaMetadata,this.#t.metadata.title=t,this.#t.metadata.images=[{url:e}],this}#e(t,e){let s=new chrome.cast.media.Track(e,chrome.cast.media.TrackType.TEXT);return s.name=t.label,s.trackContentId=t.src,s.trackContentType="text/vtt",s.language=t.language,s.subtype=t.kind.toUpperCase(),s}};var p=chrome.cast.media.TrackType.TEXT,w=chrome.cast.media.TrackType.AUDIO,m=class{#t;#e;#a;constructor(t,e,s){this.#t=t,this.#e=e,this.#a=s}setup(){let t=this.syncRemoteActiveIds.bind(this);T(this.#e.audioTracks,"change",t),T(this.#e.textTracks,"mode-change",t),S(this.#n.bind(this))}getLocalTextTracks(){return this.#e.$state.textTracks().filter(t=>t.src&&t.type==="vtt")}#r(){return this.#e.$state.audioTracks()}#i(t){let e=this.#t.mediaInfo?.tracks??[];return t?e.filter(s=>s.type===t):e}#m(){let t=[],e=this.#r().find(a=>a.selected),s=this.getLocalTextTracks().filter(a=>a.mode==="showing");if(e){let a=this.#i(w),i=this.#d(a,e);i&&t.push(i.trackId)}if(s?.length){let a=this.#i(p);if(a.length)for(let i of s){let r=this.#d(a,i);r&&t.push(r.trackId)}}return t}#n(){let t=this.getLocalTextTracks();if(!this.#t.isMediaLoaded)return;let e=this.#i(p);for(let s of t)if(!this.#d(e,s)){y(()=>this.#a?.());break}}syncRemoteTracks(t){if(!this.#t.isMediaLoaded)return;let e=this.#r(),s=this.getLocalTextTracks(),a=this.#i(w),i=this.#i(p);for(let r of a){if(this.#h(e,r))continue;let n={id:r.trackId.toString(),label:r.name,language:r.language,kind:r.subtype??"main",selected:!1};this.#e.audioTracks[v.add](n,t)}for(let r of i){if(this.#h(s,r))continue;let n={id:r.trackId.toString(),src:r.trackContentId,label:r.name,language:r.language,kind:r.subtype.toLowerCase()};this.#e.textTracks.add(n,t)}}syncRemoteActiveIds(t){if(!this.#t.isMediaLoaded)return;let e=this.#m(),s=new chrome.cast.media.EditTracksInfoRequest(e);this.#c(s).catch(a=>{})}#c(t){let e=h();return new Promise((s,a)=>e?.editTracksInfo(t,s,a))}#h(t,e){return t.find(s=>this.#s(s,e))}#d(t,e){return t.find(s=>this.#s(e,s))}#s(t,e){return e.name===t.label&&e.language===t.language&&e.subtype.toLowerCase()===t.kind.toLowerCase()}};var M=class{$$PROVIDER_TYPE="GOOGLE_CAST";scope=C();#t;#e;#a;#r=null;#i="disconnected";#m=0;#n=0;#c=new o(0,0);#h=new R(this.#b.bind(this));#d;#s=null;#l=!1;constructor(t,e){this.#t=t,this.#e=e,this.#a=new m(t,e,this.#G.bind(this))}get type(){return"google-cast"}get currentSrc(){return this.#r}get player(){return this.#t}get cast(){return L()}get session(){return A()}get media(){return h()}get hasActiveSession(){return k(this.#r)}setup(){this.#v(),this.#R(),this.#a.setup(),this.#e.notify("provider-setup",this)}#v(){x(cast.framework.CastContextEventType.CAST_STATE_CHANGED,this.#f.bind(this))}#R(){let t=cast.framework.RemotePlayerEventType,e={[t.IS_CONNECTED_CHANGED]:this.#f,[t.IS_MEDIA_LOADED_CHANGED]:this.#k,[t.CAN_CONTROL_VOLUME_CHANGED]:this.#p,[t.CAN_SEEK_CHANGED]:this.#g,[t.DURATION_CHANGED]:this.#I,[t.IS_MUTED_CHANGED]:this.#y,[t.VOLUME_LEVEL_CHANGED]:this.#y,[t.IS_PAUSED_CHANGED]:this.#P,[t.LIVE_SEEKABLE_RANGE_CHANGED]:this.#E,[t.PLAYER_STATE_CHANGED]:this.#_};this.#d=e;let s=this.#x.bind(this);for(let a of f(e))this.#t.controller.addEventListener(a,s);E(()=>{for(let a of f(e))this.#t.controller.removeEventListener(a,s)})}async play(){if(!(!this.#t.isPaused&&!this.#l)){if(this.#l){await this.#S(!1,0);return}this.#t.controller?.playOrPause()}}async pause(){this.#t.isPaused||this.#t.controller?.playOrPause()}getMediaStatus(t){return new Promise((e,s)=>{this.media?.getStatus(t,e,s)})}setMuted(t){(t&&!this.#t.isMuted||!t&&this.#t.isMuted)&&this.#t.controller?.muteOrUnmute()}setCurrentTime(t){this.#t.currentTime=t,this.#e.notify("seeking",t),this.#t.controller?.seek()}setVolume(t){this.#t.volumeLevel=t,this.#t.controller?.setVolumeLevel()}async loadSource(t){if(this.#s?.src!==t&&(this.#s=null),k(t)){this.#L(),this.#r=t;return}this.#e.notify("load-start");let e=this.#N(t),s=await this.session.loadMedia(e);if(s){this.#r=null,this.#e.notify("error",Error(b(s)));return}this.#r=t}destroy(){this.#u(),this.#T()}#u(){this.#s||(this.#n=0,this.#c=new o(0,0)),this.#h.stop(),this.#m=0,this.#s=null}#L(){let t=new u("resume-session",{detail:this.session});this.#k(t);let{muted:e,volume:s,savedState:a}=this.#e.$state,i=a();this.setCurrentTime(Math.max(this.#t.currentTime,i?.currentTime??0)),this.setMuted(e()),this.setVolume(s()),i?.paused===!1&&this.play()}#T(){this.cast.endCurrentSession(!0);let{remotePlaybackLoader:t}=this.#e.$state;t.set(null)}#A(){let{savedState:t}=this.#e.$state;t.set({paused:this.#t.isPaused,currentTime:this.#t.currentTime}),this.#T()}#b(){this.#M()}#x(t){this.#d[t.type].call(this,t)}#f(t){let e=this.cast.getCastState(),s=e===cast.framework.CastState.CONNECTED?"connected":e===cast.framework.CastState.CONNECTING?"connecting":"disconnected";if(this.#i===s)return;let a={type:"google-cast",state:s},i=this.#o(t);this.#i=s,this.#e.notify("remote-playback-change",a,i),s==="disconnected"&&this.#A()}#k(t){if(!!!this.#t.isMediaLoaded)return;let s=c(this.#e.$state.source);Promise.resolve().then(()=>{if(s!==c(this.#e.$state.source)||!this.#t.isMediaLoaded)return;this.#u();let a=this.#t.duration;this.#c=new o(0,a);let i={provider:this,duration:a,buffered:new o(0,0),seekable:this.#C()},r=this.#o(t);this.#e.notify("loaded-metadata",void 0,r),this.#e.notify("loaded-data",void 0,r),this.#e.notify("can-play",i,r),this.#p(),this.#g(t);let{volume:l,muted:n}=this.#e.$state;this.setVolume(l()),this.setMuted(n()),this.#h.start(),this.#a.syncRemoteTracks(r),this.#a.syncRemoteActiveIds(r)})}#p(){this.#e.$state.canSetVolume.set(this.#t.canControlVolume)}#g(t){let e=this.#o(t);this.#e.notify("stream-type-change",this.#w(),e)}#w(){return this.#t.mediaInfo?.streamType===chrome.cast.media.StreamType.LIVE?this.#t.canSeek?"live:dvr":"live":"on-demand"}#M(){if(this.#s)return;let t=this.#t.currentTime;t!==this.#m&&(this.#e.notify("time-change",t),t>this.#n&&(this.#n=t,this.#E()),this.#e.$state.seeking()&&this.#e.notify("seeked",t),this.#m=t)}#I(t){if(!this.#t.isMediaLoaded||this.#s)return;let e=this.#t.duration,s=this.#o(t);this.#c=new o(0,e),this.#e.notify("duration-change",e,s)}#y(t){if(!this.#t.isMediaLoaded)return;let e={muted:this.#t.isMuted,volume:this.#t.volumeLevel},s=this.#o(t);this.#e.notify("volume-change",e,s)}#P(t){let e=this.#o(t);this.#t.isPaused?this.#e.notify("pause",void 0,e):this.#e.notify("play",void 0,e)}#E(t){let e={seekable:this.#C(),buffered:new o(0,this.#n)},s=t?this.#o(t):void 0;this.#e.notify("progress",e,s)}#_(t){let e=this.#t.playerState,s=chrome.cast.media.PlayerState;if(this.#l=e===s.IDLE,e===s.PAUSED)return;let a=this.#o(t);switch(e){case s.PLAYING:this.#e.notify("playing",void 0,a);break;case s.BUFFERING:this.#e.notify("waiting",void 0,a);break;case s.IDLE:this.#h.stop(),this.#e.notify("pause"),this.#e.notify("end");break}}#C(){return this.#t.liveSeekableRange?new o(this.#t.liveSeekableRange.start,this.#t.liveSeekableRange.end):this.#c}#o(t){return t instanceof Event?t:new u(t.type,{detail:t})}#D(t){let{streamType:e,title:s,poster:a}=this.#e.$state;return new d(t).setMetadata(s(),a()).setStreamType(e()).setTracks(this.#a.getLocalTextTracks()).build()}#N(t){let e=this.#D(t),s=new chrome.cast.media.LoadRequest(e),a=this.#e.$state.savedState();return s.autoplay=(this.#s?.paused??a?.paused)===!1,s.currentTime=this.#s?.time??a?.currentTime??0,s}async#S(t,e){let s=c(this.#e.$state.source);this.#s={src:s,paused:t,time:e},await this.loadSource(s)}#G(){this.#S(this.#t.isPaused,this.#t.currentTime).catch(t=>{})}};export{M as GoogleCastProvider};
