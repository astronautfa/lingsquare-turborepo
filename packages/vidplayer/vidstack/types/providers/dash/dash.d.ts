import type DASH from 'dashjs';
import type { MediaContext } from '../../core/api/media-context.js';
import type { Src } from '../../core/api/src-types.js';
import type { DASHConstructor, DASHInstanceCallback } from './types.js';
export type DashGetMediaTracks = (type: DASH.MediaType, manifest: object) => DASH.MediaInfo[];
export declare class DASHController {
    private _video;
    protected _ctx: MediaContext;
    private _instance;
    private _stopLiveSync;
    _config: Partial<DASH.MediaPlayerSettingClass>;
    _callbacks: Set<DASHInstanceCallback>;
    get instance(): DASH.MediaPlayerClass | null;
    constructor(_video: HTMLVideoElement, _ctx: MediaContext);
    setup(ctor: DASHConstructor): void;
    private _createDOMEvent;
    private _liveSync;
    private _liveSyncPosition;
    private _dispatchDASHEvent;
    private _currentTrack;
    private _cueTracker;
    private _onTextFragmentLoaded;
    private _onTextTracksAdded;
    private _onTrackChange;
    private _onQualityChange;
    private _onManifestLoaded;
    private _onError;
    private _onFragmentLoadStart;
    private _onFragmentLoadComplete;
    private _retryLoadingTimer;
    private _onNetworkError;
    private _clearRetryTimer;
    private _onFatalError;
    private _enableAutoQuality;
    private _switchAutoBitrate;
    private _onUserQualityChange;
    private _onUserAudioChange;
    private _reset;
    loadSource(src: Src): void;
    destroy(): void;
}
